<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>漏洞扫描工具afrog</title>
    <link href="/2023/05/02/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7afrog/"/>
    <url>/2023/05/02/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7afrog/</url>
    
    <content type="html"><![CDATA[<h1 id="自动化工具afrog"><a href="#自动化工具afrog" class="headerlink" title="自动化工具afrog"></a><center>自动化工具afrog</h1><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><h2 id="此文章用于提高网络安全，漏洞复现用于漏洞自查。在此学习到的所有知识请用于正规合法途径切莫以身试法，不要对没有授权的网站或者系统进行扫描，入侵，攻击。"><a href="#此文章用于提高网络安全，漏洞复现用于漏洞自查。在此学习到的所有知识请用于正规合法途径切莫以身试法，不要对没有授权的网站或者系统进行扫描，入侵，攻击。" class="headerlink" title="此文章用于提高网络安全，漏洞复现用于漏洞自查。在此学习到的所有知识请用于正规合法途径切莫以身试法，不要对没有授权的网站或者系统进行扫描，入侵，攻击。"></a>此文章用于提高网络安全，漏洞复现用于漏洞自查。在此学习到的所有知识请用于正规合法途径切莫以身试法，不要对没有授权的网站或者系统进行扫描，入侵，攻击。</h2><h2 id="工具简介"><a href="#工具简介" class="headerlink" title="工具简介"></a>工具简介</h2><h3 id="aforg-是一款用于漏洞扫描的工具，自身集成了很多的POC，扫描速度快，开发更新速度也很给力。同时利用此工具的师傅编写了很多的POC每天都在更新，朝气蓬勃。蛙哥是一个不折不扣的好青年。给他点赞！-希望大家多给他点个Star-这里是他的地址"><a href="#aforg-是一款用于漏洞扫描的工具，自身集成了很多的POC，扫描速度快，开发更新速度也很给力。同时利用此工具的师傅编写了很多的POC每天都在更新，朝气蓬勃。蛙哥是一个不折不扣的好青年。给他点赞！-希望大家多给他点个Star-这里是他的地址" class="headerlink" title="aforg 是一款用于漏洞扫描的工具，自身集成了很多的POC，扫描速度快，开发更新速度也很给力。同时利用此工具的师傅编写了很多的POC每天都在更新，朝气蓬勃。蛙哥是一个不折不扣的好青年。给他点赞！ 希望大家多给他点个Star 这里是他的地址"></a>aforg 是一款用于漏洞扫描的工具，自身集成了很多的POC，扫描速度快，开发更新速度也很给力。同时利用此工具的师傅编写了很多的POC每天都在更新，朝气蓬勃。蛙哥是一个不折不扣的好青年。给他点赞！ 希望大家多给他点个Star <a href="https://github.com/zan8in/afrog">这里是他的地址</a></h3><h2 id="工具用法"><a href="#工具用法" class="headerlink" title="工具用法"></a>工具用法</h2><h3 id="下载工具之后"><a href="#下载工具之后" class="headerlink" title="下载工具之后"></a>下载工具之后</h3><ol><li>先用aforg -up命令更新一次POC </li><li>在查看文件中的config文件更改ceye回显示 如果没有请注册一个<a href="https://ceye.com/">ceye</a></li><li>现在就可以使用afrog 进行漏洞扫描了</li><li>扫描单个地址 用法 afrog -t  Url</li><li>扫描多个地址 用法 afrog-T Url.txt</li><li>具体详细可以看他的git</li></ol><h2 id="POC编写"><a href="#POC编写" class="headerlink" title="POC编写"></a>POC编写</h2><h3 id="肯定各位师傅是有自己的漏洞库，没有公开的0day-他也可以自定义漏洞编写进行扫描"><a href="#肯定各位师傅是有自己的漏洞库，没有公开的0day-他也可以自定义漏洞编写进行扫描" class="headerlink" title="肯定各位师傅是有自己的漏洞库，没有公开的0day 他也可以自定义漏洞编写进行扫描"></a>肯定各位师傅是有自己的漏洞库，没有公开的0day 他也可以自定义漏洞编写进行扫描</h3><h4 id="id"><a href="#id" class="headerlink" title="id"></a>id</h4><p>[公司]产品-漏洞名称|CVE&#x2F;CNVD-2021-XXXX</p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs qml"><span class="hljs-attribute">id:</span><span class="hljs-string"> CVE</span><span class="hljs-number">-2022</span><span class="hljs-number">-0202</span>  <span class="hljs-comment">// good</span><br><span class="hljs-attribute">id:</span><span class="hljs-string"> seeyon</span>-ajax-unauth  <span class="hljs-comment">// good</span><br><span class="hljs-attribute">id:</span><span class="hljs-string"> zhiyuan</span>-oa-unauth   <span class="hljs-comment">// bad</span><br></code></pre></td></tr></table></figure><h4 id="info"><a href="#info" class="headerlink" title="info"></a>info</h4><p>包含 name、author、severity、description、reference</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">id: CVE-<span class="hljs-number">2022</span>-<span class="hljs-number">22947</span><br>info:<br>  name: Spring Cloud Gateway Code Injection<br>  author: alex<br>  severity: critical<br>  description: |<br>    Spring Cloud Gateway 远程代码执行漏洞（CVE-<span class="hljs-number">2022</span>-<span class="hljs-number">22947</span>）发生在Spring Cloud Gateway...<br>    影响版本：Spring Cloud Gateway <span class="hljs-number">3.1</span>.x &lt; <span class="hljs-number">3.1</span>.<span class="hljs-number">1</span> 、Spring Cloud Gateway &lt; <span class="hljs-number">3.0</span>.<span class="hljs-number">7</span><br>    官方已发布安全版本，请及时下载更新，下载地址：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/spring-cloud/</span>spring-cloud-gateway<br>    FOFA：app=<span class="hljs-string">&quot;vmware-SpringBoot-framework&quot;</span><br>  reference:<br>    - https:<span class="hljs-regexp">//m</span>p.weixin.qq.com<span class="hljs-regexp">/s/</span>qIAcycsO_L9JKisG5Bgg_w <span class="hljs-regexp">//</span> 必须是列表（数组）形式<br></code></pre></td></tr></table></figure><p>name：漏洞名称，尽量英文且官方用语<br>author：大佬名称<br>severity: 漏洞等级，分为critical、high、mideum、low、info，请参考 [National Vulnerability Database]<br>description: （可选填）包含 漏洞描述、漏洞影响、网络测绘、修复建议 等<br>reference: （可选填）参考链接，必须数组形式，否则 poc 无法验证</p><h4 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">rules:<br>  r0:<br>    request:<br>      <span class="hljs-keyword">method</span>: GET<br>      path: /phpinfo.php<br>    expression: response.status == <span class="hljs-number">200</span> &amp;&amp; response.body.bcontains(b<span class="hljs-string">&#x27;PHP Version&#x27;</span>)<br>    stop_if_match: <span class="hljs-keyword">true</span><br>  r1:<br>    before_sleep: <span class="hljs-number">6</span><br>    request:<br>      <span class="hljs-keyword">method</span>: GET<br>      path: /info.php<br>    expression: response.status == <span class="hljs-number">200</span> &amp;&amp; response.body.bcontains(b<span class="hljs-string">&#x27;PHP Version&#x27;</span>)<br>    stop_if_mismatch: <span class="hljs-keyword">true</span><br>expression: r0() || r1()<br></code></pre></td></tr></table></figure><p>rules：定义规则组</br><br>r0 &#x2F; r1 : 子规则，自定义名称，不能重复</br><br>request: 表示 http request 请求</br><br>method: 表示 http request method 方法</br><br>path: 表示 http request URL 请求的 PATH</br><br>expression：子规则的验证表达式，用于验证 r0 或 r1 是否匹配规则。比如：response.status &#x3D;&#x3D; 200 &amp;&amp; response.body.bcontains(b’PHP Version’)表示 request 请求返回状态码必须是 200 且 源码必须含有 PHP Version 关键字</br><br>stop_if_match: 如果匹配就停止</br><br>stop_if_mismatch：如果不匹配就停止</br><br>before_sleep: 顾名思义，http 请求前 sleep 6 秒钟</br><br>expression: 最外面的 expression 是 rules 的验证表达式，r0() || r1() 表示 r0 和 r1 两个规则，匹配一个表达式就为 true，代表漏洞存在。</br></p><blockquote><p>如果 rules 表达式都是 ||关系，比如：r0() || r1() || r2() … ，默认执行 stop_if_match 动作。同理，如果表达式都是 &amp;&amp; 关系，默认执行 stop_if_mismatch 动作。</p></blockquote><h4 id="raw-http"><a href="#raw-http" class="headerlink" title="raw http"></a>raw http</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">set</span>:<br>  <span class="hljs-attribute">hostname</span>: request.url.host<br><span class="hljs-attribute">rules</span>:<br>  <span class="hljs-attribute">r0</span>:<br>    <span class="hljs-attribute">request</span>:<br>      <span class="hljs-attribute">raw</span>: |<br>        <span class="hljs-attribute">GET</span> .//WEB-INF/web.xml HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br>        <span class="hljs-attribute">Host</span>: &#123;&#123;hostname&#125;&#125;<br>        <span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64; rv:<span class="hljs-number">99</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">99</span>.<span class="hljs-number">0</span><br>    <span class="hljs-attribute">expression</span>: response.status == <span class="hljs-number">200</span> &amp;&amp; response.body.bcontains(b&#x27;&lt;web-app&#x27;) &amp;&amp; response.body.bcontains(b&#x27;&lt;/web-app&gt;&#x27;) &amp;&amp; (response.raw_header.bcontains(b&#x27;application/xml&#x27;) || response.raw_header.bcontains(b&#x27;text/xml&#x27;))<br>  <span class="hljs-attribute">r1</span>:<br>    <span class="hljs-attribute">request</span>:<br>      <span class="hljs-attribute">raw</span>: |<br>        <span class="hljs-attribute">GET</span> .//WEB-INF/weblogic.xml HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br>        <span class="hljs-attribute">Host</span>: &#123;&#123;hostname&#125;&#125;<br>        <span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64; rv:<span class="hljs-number">99</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">99</span>.<span class="hljs-number">0</span><br>    <span class="hljs-attribute">expression</span>: response.status == <span class="hljs-number">200</span> &amp;&amp; response.body.bcontains(b&#x27;&lt;weblogic-web-app&#x27;) &amp;&amp; response.body.bcontains(b&#x27;&lt;/weblogic-web-app&gt;&#x27;) &amp;&amp; (response.raw_header.bcontains(b&#x27;application/xml&#x27;) || response.raw_header.bcontains(b&#x27;text/xml&#x27;))<br><span class="hljs-attribute">expression</span>: r0() || r1()<br></code></pre></td></tr></table></figure><p>raw: 顾名思义，支持原生 http 请求</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>如果还是不会可以加他的微信:zhanbin168</p><h1 id="再见！"><a href="#再见！" class="headerlink" title="再见！"></a>再见！</h1>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>扫描</tag>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
